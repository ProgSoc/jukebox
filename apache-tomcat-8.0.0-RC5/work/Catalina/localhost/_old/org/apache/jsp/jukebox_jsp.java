/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.0-RC5
 * Generated at: 2013-12-13 05:54:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import raspiejukebox.*;
import java.io.*;

public final class jukebox_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


String getVolume(){
	try{
		Process proc = Runtime.getRuntime().exec("amixer get PCM");
		BufferedReader stdIn = new BufferedReader(new 
					 InputStreamReader(proc.getInputStream()));
		
		String volume = "";
		String line = null;
		while ((line = stdIn.readLine()) != null && !volume.matches("[0-9]+\\%"))
			volume = line.replaceAll(".*?([0-9]+\\%).*", "$1");
		
		return volume;
	} catch (Exception e) {
		//out.println("<!--IO error occured-->");
		return "00%";
	}
}
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/xml");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("<result>\n");
      out.write("success\n");
      out.write("\n");

JukeBox jb = JukeBox.get();
TracksDatabase tdb = TracksDatabase.get();

if (!HardwareInterface.isInitialised())
	HardwareInterface.initialise();

String command = request.getParameter("com");

if (command == null);
else if (command.equals("play"))
	jb.play();
else if (command.equals("pause"))
	jb.pause();
else if (command.equals("next"))
	jb.playNext();
else if (command.equals("addsong"))
	jb.addToQueue(tdb.getTrackByID(Integer.parseInt(request.getParameter("id"))));
else if (command.equals("refreshdb"))
	tdb.reloadDatabase(true);
else if (command.equals("vol")){
	String vol = request.getParameter("volLevel");
	if (!vol.endsWith("%"))
		vol += "%";
	if (vol.matches("([0-9]{1,2})\\%?")){
		Runtime.getRuntime().exec("amixer cset numid=1 -- " + vol);
	}

}
else{
	
      out.write("Command unknown");

}

      out.write("\n");
      out.write("\n");
      out.write("</result>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
